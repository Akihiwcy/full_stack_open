{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyLab\\\\Learning\\\\full-stack-open\\\\part2\\\\courseinfo\\\\src\\\\components\\\\Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    header\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: header\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1,\n    columnNumber: 32\n  }, this);\n};\n_c = Header;\nconst Part = _ref2 => {\n  let {\n    part\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [part.name, \" \", part.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Part;\nconst Contend = _ref3 => {\n  let {\n    content\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: content.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      part: part\n    }, part.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c3 = Contend;\nconst Total = _ref4 => {\n  let {\n    parts\n  } = _ref4;\n  // console.log(parts);\n  let total = parts.reduce((accumulator, currentValue) => accumulator + currentValue.exercises, 0);\n  for (let i in parts) {\n    console.log(parts[i]);\n    total += parts[i].exercises;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"total of \", total, \" exercises\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n_c4 = Total;\nconst Course = _ref5 => {\n  let {\n    course\n  } = _ref5;\n  // console.log(course);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contend, {\n      content: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c5 = Course;\nexport default Course;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Contend\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"Course\");","map":{"version":3,"names":["Header","header","Part","part","name","exercises","Contend","content","map","id","Total","parts","total","reduce","accumulator","currentValue","i","console","log","Course","course"],"sources":["D:/MyLab/Learning/full-stack-open/part2/courseinfo/src/components/Course.js"],"sourcesContent":["const Header = ({ header }) => <h1>{header}</h1>\r\n\r\nconst Part = ({ part }) => {\r\n  return (\r\n    <p>{part.name} {part.exercises}</p>\r\n  )\r\n}\r\n\r\nconst Contend = ({ content }) => {\r\n  return (\r\n    <>\r\n      {content.map(part => \r\n        <Part key={part.id} part={part}/>\r\n      )}\r\n    </>\r\n      \r\n  )\r\n}\r\n\r\nconst Total = ({parts}) => {\r\n  // console.log(parts);\r\n  let total = parts.reduce(\r\n    (accumulator, currentValue) => accumulator + currentValue.exercises,\r\n    0\r\n  );\r\n\r\n  for (let i in parts) {\r\n    console.log(parts[i])\r\n    total += parts[i].exercises;\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <p>\r\n      <b>\r\n        total of {total} exercises\r\n      </b>\r\n    </p>\r\n  </div>\r\n  )\r\n}\r\n  \r\n\r\n\r\nconst Course = ({ course }) => {\r\n  // console.log(course);\r\n  return (\r\n    <>\r\n      <Header header={course.name} />\r\n      <Contend content={course.parts} />\r\n      <Total parts={course.parts} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course"],"mappings":";;;AAAA,MAAMA,MAAM,GAAG;EAAA,IAAC;IAAEC;EAAO,CAAC;EAAA,oBAAK;IAAA,UAAKA;EAAM;IAAA;IAAA;IAAA;EAAA,QAAM;AAAA;AAAA,KAA1CD,MAAM;AAEZ,MAAME,IAAI,GAAG,SAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACpB,oBACE;IAAA,WAAIA,IAAI,CAACC,IAAI,EAAC,GAAC,EAACD,IAAI,CAACE,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AAEvC,CAAC;AAAA,MAJKH,IAAI;AAMV,MAAMI,OAAO,GAAG,SAAiB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC1B,oBACE;IAAA,UACGA,OAAO,CAACC,GAAG,CAACL,IAAI,iBACf,QAAC,IAAI;MAAe,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACM,EAAE;MAAA;MAAA;MAAA;IAAA,QAAe;EAClC,iBACA;AAGP,CAAC;AAAA,MATKH,OAAO;AAWb,MAAMI,KAAK,GAAG,SAAa;EAAA,IAAZ;IAACC;EAAK,CAAC;EACpB;EACA,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAM,CACtB,CAACC,WAAW,EAAEC,YAAY,KAAKD,WAAW,GAAGC,YAAY,CAACV,SAAS,EACnE,CAAC,CACF;EAED,KAAK,IAAIW,CAAC,IAAIL,KAAK,EAAE;IACnBM,OAAO,CAACC,GAAG,CAACP,KAAK,CAACK,CAAC,CAAC,CAAC;IACrBJ,KAAK,IAAID,KAAK,CAACK,CAAC,CAAC,CAACX,SAAS;EAC7B;EAEA,oBACA;IAAA,uBACE;MAAA,uBACE;QAAA,WAAG,WACQ,EAACO,KAAK,EAAC,YAClB;MAAA;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACA;AAER,CAAC;AAAA,MArBKF,KAAK;AAyBX,MAAMS,MAAM,GAAG,SAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC;EACxB;EACA,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,MAAM,EAAEA,MAAM,CAAChB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/B,QAAC,OAAO;MAAC,OAAO,EAAEgB,MAAM,CAACT;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAClC,QAAC,KAAK;MAAC,KAAK,EAAES,MAAM,CAACT;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAC7B;AAEP,CAAC;AAAA,MATKQ,MAAM;AAWZ,eAAeA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}